<?php
namespace Geissler\CSL;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-12-02 at 13:29:49.
 */
class LocaleTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Locale
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = CSL::locale();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Geissler\CSL\Locale::setDir
     * @todo   Implement testSetDir().
     */
    public function testSetDir()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Geissler\CSL\Locale::setFile
     * @todo   Implement testSetFile().
     */
    public function testSetFile()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Geissler\CSL\Locale::setPrimaryDialect
     * @todo   Implement testSetPrimaryDialect().
     */
    public function testSetPrimaryDialect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Geissler\CSL\Locale::readFile
     * @todo   Implement testReadFile().
     */
    public function testReadFile()
    {
        $this->assertInstanceOf('\Geissler\CSL\Locale', $this->object->readFile('de-DE'));
    }

    /**
     * @covers Geissler\CSL\Locale::readXml
     * @todo   Implement testReadXml().
     */
    public function testReadXml()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Geissler\CSL\Locale::getOptions
     */
    public function testGetOptions()
    {
        $this->assertInstanceOf('\Geissler\CSL\Locale', $this->object->readFile('de'));
        $this->assertFalse($this->object->getOptions('punctuation-in-quote'));
    }

    /**
     * @covers Geissler\CSL\Locale::getDate
     * @todo   Implement testGetDate().
     */
    public function testGetDate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Geissler\CSL\Locale::getTerms
     */
    public function testGetTerms()
    {
        $this->assertInstanceOf('\Geissler\CSL\Locale', $this->object->readFile('de-DE'));
        $this->assertEquals('n. Chr.', $this->object->getTerms('ad'));
    }

    /**
     * @covers Geissler\CSL\Locale::getTerms
     */
    public function testGetMultipleTerms()
    {
        $this->assertInstanceOf('\Geissler\CSL\Locale', $this->object->readFile('de-DE'));
        $this->assertEquals('Auflagen', $this->object->getTerms('edition', '', 'multiple'));
    }

    /**
     * @covers Geissler\CSL\Locale::getTerms
     */
    public function testGetFormTerms()
    {
        $this->assertInstanceOf('\Geissler\CSL\Locale', $this->object->readFile('de-DE'));
        $this->assertEquals('Aufl.', $this->object->getTerms('edition', 'short'));
    }

    /**
     * @covers Geissler\CSL\Locale::getTerms
     */
    public function testGetFormAndMultipleTerms()
    {
        $this->assertInstanceOf('\Geissler\CSL\Locale', $this->object->readFile('de-DE'));
        $this->assertEquals('Ref.', $this->object->getTerms('reference', 'short', 'multiple'));
    }

    /**
     * @covers Geissler\CSL\Locale::getTerms
     */
    public function testGetFormAndMultipleTerms1()
    {
        $this->assertInstanceOf('\Geissler\CSL\Locale', $this->object->readFile('de-DE'));
        $this->assertEquals('Ref.', $this->object->getTerms('reference', 'short'));
    }

    /**
     * @covers Geissler\CSL\Locale::getTerms
     */
    public function testGetFormAndMultipleTerms2()
    {
        $this->assertInstanceOf('\Geissler\CSL\Locale', $this->object->readFile('de-DE'));
        $this->assertEquals('Referenzen', $this->object->getTerms('reference', '', 'multiple'));
    }

    /**
     * @covers Geissler\CSL\Locale::getTerms
     */
    public function testGetFormAndMultipleTerms3()
    {
        $this->assertInstanceOf('\Geissler\CSL\Locale', $this->object->readFile('de-DE'));
        $this->assertEquals('Referenz', $this->object->getTerms('reference'));
    }
}
