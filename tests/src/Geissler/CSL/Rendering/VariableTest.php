<?php
namespace Geissler\CSL\Rendering;

use Geissler\CSL\Data\Data;
use Geissler\CSL\Container;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-12-02 at 21:32:24.
 */
class VariableTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Variable
     */
    protected $object;

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Geissler\CSL\Rendering\Variable::__construct
     * @covers Geissler\CSL\Rendering\Variable::render
     * @covers Geissler\CSL\Rendering\Variable::hasAccessEmptyVariable
     */
    public function testRender()
    {
        $json = '[
    {
        "title": "My Book",
        "edition": "5",
        "id": "ITEM-1",
        "type": "book"
    }]';
        $layout =   '<text variable="title"/>';

        $this->initElement($layout, $json);
        $this->assertEquals('My Book', $this->object->render(''));
        $this->assertFalse($this->object->hasAccessEmptyVariable());
    }

    /**
     * @covers Geissler\CSL\Rendering\Variable::__construct
     * @covers Geissler\CSL\Rendering\Variable::render
     * @covers Geissler\CSL\Rendering\Variable::hasAccessEmptyVariable
     */
    public function testRenderShort()
    {
        $json = '[
    {
        "title": "My long Book",
        "title-short" : "My Book",
        "edition": "5",
        "id": "ITEM-1",
        "type": "book"
    }]';
        $layout =   '<text variable="title" form="short"/>';

        $this->initElement($layout, $json);
        $this->assertEquals('My Book', $this->object->render(''));
        $this->assertFalse($this->object->hasAccessEmptyVariable());
    }

    /**
     * @covers Geissler\CSL\Rendering\Variable::__construct
     * @covers Geissler\CSL\Rendering\Variable::render
     * @covers Geissler\CSL\Rendering\Variable::hasAccessEmptyVariable
     */
    public function testRenderShort1()
    {
        $json = '[
    {
        "title": "My long Book",
        "edition": "5",
        "id": "ITEM-1",
        "type": "book"
    }]';
        $layout =   '<text variable="title" form="short"/>';


        $this->initElement($layout, $json);
        $this->assertEquals('My long Book', $this->object->render(''));
        $this->assertFalse($this->object->hasAccessEmptyVariable());
    }

    /**
     * @covers Geissler\CSL\Rendering\Variable::__construct
     * @covers Geissler\CSL\Rendering\Variable::render
     * @covers Geissler\CSL\Rendering\Variable::hasAccessEmptyVariable
     */
    public function testRenderNot()
    {
        $json = '[
    {
        "title": "My long Book",
        "edition": "5",
        "id": "ITEM-1",
        "type": "book"
    }]';
        $layout =   '<text variable="URL" form="short"/>';


        $this->initElement($layout, $json);
        $this->assertEquals('', $this->object->render(''));
        $this->assertTrue($this->object->hasAccessEmptyVariable());
    }

    protected function initElement($layout, $json)
    {
        $data   =   new Data();
        $data->set($json);
        Container::setData($data);

        $xml = new \SimpleXMLElement($layout);
        $this->object   =   new Variable($xml);
    }
}
