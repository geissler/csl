<?php
namespace Geissler\CSL\Rendering;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-12-02 at 16:39:25.
 */
class FormatingTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Formatting
     */
    protected $object;

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Geissler\CSL\Rendering\Formatting::render
     * @covers Geissler\CSL\Rendering\Formatting::__construct
     */
    public function testRender()
    {
        $this->initElement('<name font-variant="small-caps" sort-separator=", " initialize-with="." delimiter=", "/>');
        $this->assertEquals('<font style="font-variant:small-caps">Test</font>', $this->object->render('Test'));
    }

    /**
     * @covers Geissler\CSL\Rendering\Formatting::render
     */
    public function testRender1()
    {
        $this->initElement('<et-al font-variant="normal" font-style="italic"/>');
        $this->assertEquals('<font style="font-style:italic">Test</font>', $this->object->render('Test'));
    }

    /**
     * @covers Geissler\CSL\Rendering\Formatting::render
     */
    public function testRender2()
    {
        $this->initElement('<et-al font-variant="small-caps" font-style="italic"/>');
        $this->assertEquals('<font style="font-style:italic;font-variant:small-caps">Test</font>', $this->object->render('Test'));
    }

    /**
     * @covers Geissler\CSL\Rendering\Formatting::render
     */
    public function testRender3()
    {
        $this->initElement('<et-al font-weight="bold" text-decoration="underline"/>');
        $this->assertEquals('<font style="font-weight:bold;text-decoration:underline">Test</font>', $this->object->render('Test'));
    }

    /**
     * @covers Geissler\CSL\Rendering\Formatting::render
     */
    public function testRender4()
    {
        $this->initElement('<et-al vertical-align="sup"/>');
        $this->assertEquals('<font style="vertical-align:super">Test</font>', $this->object->render('Test'));
    }

    /**
     * @covers Geissler\CSL\Rendering\Formatting::render
     */
    public function testRender5()
    {
        $this->initElement('<et-al vertical-align="sup" font-style="oblique"/>');
        $this->assertEquals('<font style="font-style:oblique;vertical-align:super">Test</font>', $this->object->render('Test'));
    }

    /**
     * @covers Geissler\CSL\Rendering\Formatting::render
     */
    public function testRenderNothing()
    {
        $this->initElement('<et-al/>');
        $this->assertEquals('Test', $this->object->render('Test'));
    }

    protected function initElement($layout)
    {
        $xml = new \SimpleXMLElement($layout);
        $this->object   =   new Formatting($xml);
    }
}
