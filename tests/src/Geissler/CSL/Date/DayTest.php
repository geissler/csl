<?php
namespace Geissler\CSL\Date;

use Geissler\CSL\Factory;
use Geissler\CSL\Container;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-12-03 at 22:30:41.
 */
class DayTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Day
     */
    protected $object;

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Geissler\CSL\Date\Day::render
     * @covers Geissler\CSL\Date\Day::__construct
     */
    public function testRenderNumeric()
    {
        $layout =   '<date-part name="day" suffix=" " />';
        $this->initElement($layout);
        $this->assertEquals('23', $this->object->render('23'));
    }

    /**
     * @covers Geissler\CSL\Date\Day::render
     */
    public function testRenderNumeric1()
    {
        $layout =   '<date-part name="day" suffix=" " />';
        $this->initElement($layout);
        $this->assertEquals('2', $this->object->render('2'));
    }

    /**
     * @covers Geissler\CSL\Date\Day::render
     * @covers Geissler\CSL\Date\Day::__construct
     */
    public function testRenderNumericLeadingZeros()
    {
        $layout =   '<date-part name="day" form="numeric-leading-zeros" />';
        $this->initElement($layout);
        $this->assertEquals('02', $this->object->render('2'));
    }

    /**
     * @covers Geissler\CSL\Date\Day::render
     * @covers Geissler\CSL\Date\Day::__construct
     */
    public function testRenderNumericLeadingZeros1()
    {
        $layout =   '<date-part name="day" form="numeric-leading-zeros" />';
        $this->initElement($layout);
        $this->assertEquals('12', $this->object->render('12'));
    }

    /**
     * @covers Geissler\CSL\Date\Day::render
     */
    public function testRenderAsEnglishOrdinal()
    {
        $locale = Factory::locale();
        $locale->readFile();
        Container::setLocale($locale);

        $layout =   '<date-part name="day" form="ordinal"/>';
        $this->initElement($layout);
        $this->assertEquals('1st', $this->object->render('1'));
    }

    /**
     * @covers Geissler\CSL\Date\Day::render
     */
    public function testRenderAsEnglishOrdinal1()
    {
        $locale = Factory::locale();
        $locale->readFile();
        Container::setLocale($locale);

        $layout =   '<date-part name="day" form="ordinal"/>';
        $this->initElement($layout);
        $this->assertEquals('2nd', $this->object->render(2));
    }

    /**
     * @covers Geissler\CSL\Date\Day::render
     */
    public function testRenderAsEnglishOrdinal2()
    {
        $locale = Factory::locale();
        $locale->readFile();
        Container::setLocale($locale);

        $layout =   '<date-part name="day" form="ordinal"/>';
        $this->initElement($layout);
        $this->assertEquals('3rd', $this->object->render('03'));
    }

    /**
     * @covers Geissler\CSL\Date\Day::render
     */
    public function testRenderAsEnglishOrdinal3()
    {
        $locale = Factory::locale();
        $locale->readFile();
        Container::setLocale($locale);

        $layout =   '<date-part name="day" form="ordinal"/>';
        $this->initElement($layout);
        $this->assertEquals('23th', $this->object->render('23'));
    }

    /**
     * @covers Geissler\CSL\Date\Day::render
     */
    public function testRenderAsGermanOrdinal()
    {
        $locale = Factory::locale();
        $locale->readFile('de');
        Container::setLocale($locale);

        $layout =   '<date-part name="day" form="ordinal"/>';
        $this->initElement($layout);
        $this->assertEquals('23.', $this->object->render('23'));
    }

    /**
     * @covers Geissler\CSL\Date\Day::render
     */
    public function testRenderAsGermanOrdinal1()
    {
        $locale = Factory::locale();
        $locale->readFile('de');
        Container::setLocale($locale);

        $layout =   '<date-part name="day" form="ordinal"/>';
        $this->initElement($layout);
        $this->assertEquals('1.', $this->object->render('1'));
    }

    /**
     * @covers Geissler\CSL\Date\Day::render
     */
    public function testRenderAsFrenchOrdinal()
    {
        $locale = Factory::locale();
        $locale->readFile('fr');
        Container::setLocale($locale);

        $layout =   '<date-part name="day" form="ordinal"/>';
        $this->initElement($layout);
        $this->assertEquals('23', $this->object->render('23'));
    }

    /**
     * @covers Geissler\CSL\Date\Day::render
     */
    public function testRenderAsFrenchOrdinal1()
    {
        $locale = Factory::locale();
        $locale->readFile('fr');
        Container::setLocale($locale);

        $layout =   '<date-part name="day" form="ordinal"/>';
        $this->initElement($layout);
        $this->assertEquals('1ʳᵉ', $this->object->render('1'));
    }

    protected function initElement($layout)
    {
        $xml = new \SimpleXMLElement($layout);
        $this->object   =   new Day($xml);
    }
}
